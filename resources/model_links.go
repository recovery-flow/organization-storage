/*
Cifra SSO REST API

SSO REST API for Cifra app

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the Links type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Links{}

// Links struct for Links
type Links struct {
	// Twitter profile link
	Twitter string `json:"twitter"`
	// Instagram profile link
	Instagram string `json:"instagram"`
	// Facebook profile link
	Facebook string `json:"facebook"`
	// TikTok profile link
	Tiktok string `json:"tiktok"`
	// LinkedIn profile link
	Linkedin string `json:"linkedin"`
	// Telegram profile link
	Telegram string `json:"telegram"`
	// Discord profile link
	Discord string `json:"discord"`
}

type _Links Links

// NewLinks instantiates a new Links object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinks(twitter string, instagram string, facebook string, tiktok string, linkedin string, telegram string, discord string) *Links {
	this := Links{}
	this.Twitter = twitter
	this.Instagram = instagram
	this.Facebook = facebook
	this.Tiktok = tiktok
	this.Linkedin = linkedin
	this.Telegram = telegram
	this.Discord = discord
	return &this
}

// NewLinksWithDefaults instantiates a new Links object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinksWithDefaults() *Links {
	this := Links{}
	return &this
}

// GetTwitter returns the Twitter field value
func (o *Links) GetTwitter() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Twitter
}

// GetTwitterOk returns a tuple with the Twitter field value
// and a boolean to check if the value has been set.
func (o *Links) GetTwitterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Twitter, true
}

// SetTwitter sets field value
func (o *Links) SetTwitter(v string) {
	o.Twitter = v
}

// GetInstagram returns the Instagram field value
func (o *Links) GetInstagram() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Instagram
}

// GetInstagramOk returns a tuple with the Instagram field value
// and a boolean to check if the value has been set.
func (o *Links) GetInstagramOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Instagram, true
}

// SetInstagram sets field value
func (o *Links) SetInstagram(v string) {
	o.Instagram = v
}

// GetFacebook returns the Facebook field value
func (o *Links) GetFacebook() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Facebook
}

// GetFacebookOk returns a tuple with the Facebook field value
// and a boolean to check if the value has been set.
func (o *Links) GetFacebookOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Facebook, true
}

// SetFacebook sets field value
func (o *Links) SetFacebook(v string) {
	o.Facebook = v
}

// GetTiktok returns the Tiktok field value
func (o *Links) GetTiktok() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tiktok
}

// GetTiktokOk returns a tuple with the Tiktok field value
// and a boolean to check if the value has been set.
func (o *Links) GetTiktokOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tiktok, true
}

// SetTiktok sets field value
func (o *Links) SetTiktok(v string) {
	o.Tiktok = v
}

// GetLinkedin returns the Linkedin field value
func (o *Links) GetLinkedin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Linkedin
}

// GetLinkedinOk returns a tuple with the Linkedin field value
// and a boolean to check if the value has been set.
func (o *Links) GetLinkedinOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Linkedin, true
}

// SetLinkedin sets field value
func (o *Links) SetLinkedin(v string) {
	o.Linkedin = v
}

// GetTelegram returns the Telegram field value
func (o *Links) GetTelegram() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Telegram
}

// GetTelegramOk returns a tuple with the Telegram field value
// and a boolean to check if the value has been set.
func (o *Links) GetTelegramOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Telegram, true
}

// SetTelegram sets field value
func (o *Links) SetTelegram(v string) {
	o.Telegram = v
}

// GetDiscord returns the Discord field value
func (o *Links) GetDiscord() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Discord
}

// GetDiscordOk returns a tuple with the Discord field value
// and a boolean to check if the value has been set.
func (o *Links) GetDiscordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Discord, true
}

// SetDiscord sets field value
func (o *Links) SetDiscord(v string) {
	o.Discord = v
}

func (o Links) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Links) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["twitter"] = o.Twitter
	toSerialize["instagram"] = o.Instagram
	toSerialize["facebook"] = o.Facebook
	toSerialize["tiktok"] = o.Tiktok
	toSerialize["linkedin"] = o.Linkedin
	toSerialize["telegram"] = o.Telegram
	toSerialize["discord"] = o.Discord
	return toSerialize, nil
}

func (o *Links) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"twitter",
		"instagram",
		"facebook",
		"tiktok",
		"linkedin",
		"telegram",
		"discord",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLinks := _Links{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLinks)

	if err != nil {
		return err
	}

	*o = Links(varLinks)

	return err
}

type NullableLinks struct {
	value *Links
	isSet bool
}

func (v NullableLinks) Get() *Links {
	return v.value
}

func (v *NullableLinks) Set(val *Links) {
	v.value = val
	v.isSet = true
}

func (v NullableLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinks(val *Links) *NullableLinks {
	return &NullableLinks{value: val, isSet: true}
}

func (v NullableLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


