/*
test

example

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
)

// checks if the OrganizationUpdateDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationUpdateDataAttributes{}

// OrganizationUpdateDataAttributes struct for OrganizationUpdateDataAttributes
type OrganizationUpdateDataAttributes struct {
	// Team name
	Name *string `json:"name,omitempty"`
	// Team description
	Desc *string `json:"desc,omitempty"`
	// Type of Organization
	Sort *string `json:"sort,omitempty"`
	// Country of registration
	Country *string `json:"country,omitempty"`
	// City of HQ
	City *string `json:"city,omitempty"`
}

// NewOrganizationUpdateDataAttributes instantiates a new OrganizationUpdateDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationUpdateDataAttributes() *OrganizationUpdateDataAttributes {
	this := OrganizationUpdateDataAttributes{}
	return &this
}

// NewOrganizationUpdateDataAttributesWithDefaults instantiates a new OrganizationUpdateDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationUpdateDataAttributesWithDefaults() *OrganizationUpdateDataAttributes {
	this := OrganizationUpdateDataAttributes{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OrganizationUpdateDataAttributes) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationUpdateDataAttributes) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OrganizationUpdateDataAttributes) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OrganizationUpdateDataAttributes) SetName(v string) {
	o.Name = &v
}

// GetDesc returns the Desc field value if set, zero value otherwise.
func (o *OrganizationUpdateDataAttributes) GetDesc() string {
	if o == nil || IsNil(o.Desc) {
		var ret string
		return ret
	}
	return *o.Desc
}

// GetDescOk returns a tuple with the Desc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationUpdateDataAttributes) GetDescOk() (*string, bool) {
	if o == nil || IsNil(o.Desc) {
		return nil, false
	}
	return o.Desc, true
}

// HasDesc returns a boolean if a field has been set.
func (o *OrganizationUpdateDataAttributes) HasDesc() bool {
	if o != nil && !IsNil(o.Desc) {
		return true
	}

	return false
}

// SetDesc gets a reference to the given string and assigns it to the Desc field.
func (o *OrganizationUpdateDataAttributes) SetDesc(v string) {
	o.Desc = &v
}

// GetSort returns the Sort field value if set, zero value otherwise.
func (o *OrganizationUpdateDataAttributes) GetSort() string {
	if o == nil || IsNil(o.Sort) {
		var ret string
		return ret
	}
	return *o.Sort
}

// GetSortOk returns a tuple with the Sort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationUpdateDataAttributes) GetSortOk() (*string, bool) {
	if o == nil || IsNil(o.Sort) {
		return nil, false
	}
	return o.Sort, true
}

// HasSort returns a boolean if a field has been set.
func (o *OrganizationUpdateDataAttributes) HasSort() bool {
	if o != nil && !IsNil(o.Sort) {
		return true
	}

	return false
}

// SetSort gets a reference to the given string and assigns it to the Sort field.
func (o *OrganizationUpdateDataAttributes) SetSort(v string) {
	o.Sort = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *OrganizationUpdateDataAttributes) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationUpdateDataAttributes) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *OrganizationUpdateDataAttributes) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *OrganizationUpdateDataAttributes) SetCountry(v string) {
	o.Country = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *OrganizationUpdateDataAttributes) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationUpdateDataAttributes) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *OrganizationUpdateDataAttributes) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *OrganizationUpdateDataAttributes) SetCity(v string) {
	o.City = &v
}

func (o OrganizationUpdateDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationUpdateDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Desc) {
		toSerialize["desc"] = o.Desc
	}
	if !IsNil(o.Sort) {
		toSerialize["sort"] = o.Sort
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	return toSerialize, nil
}

type NullableOrganizationUpdateDataAttributes struct {
	value *OrganizationUpdateDataAttributes
	isSet bool
}

func (v NullableOrganizationUpdateDataAttributes) Get() *OrganizationUpdateDataAttributes {
	return v.value
}

func (v *NullableOrganizationUpdateDataAttributes) Set(val *OrganizationUpdateDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationUpdateDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationUpdateDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationUpdateDataAttributes(val *OrganizationUpdateDataAttributes) *NullableOrganizationUpdateDataAttributes {
	return &NullableOrganizationUpdateDataAttributes{value: val, isSet: true}
}

func (v NullableOrganizationUpdateDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationUpdateDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


