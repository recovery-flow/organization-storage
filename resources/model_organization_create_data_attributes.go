/*
test

example

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OrganizationCreateDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationCreateDataAttributes{}

// OrganizationCreateDataAttributes struct for OrganizationCreateDataAttributes
type OrganizationCreateDataAttributes struct {
	// Team name
	Name string `json:"name"`
	// Team description
	Desc string `json:"desc"`
	// Type of Organization
	Sort string `json:"sort"`
	// Country of registration
	Country string `json:"country"`
	Owner OrganizationCreateDataAttributesOwner `json:"owner"`
	// City of HQ
	City *string `json:"city,omitempty"`
}

type _OrganizationCreateDataAttributes OrganizationCreateDataAttributes

// NewOrganizationCreateDataAttributes instantiates a new OrganizationCreateDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationCreateDataAttributes(name string, desc string, sort string, country string, owner OrganizationCreateDataAttributesOwner) *OrganizationCreateDataAttributes {
	this := OrganizationCreateDataAttributes{}
	this.Name = name
	this.Desc = desc
	this.Sort = sort
	this.Country = country
	this.Owner = owner
	return &this
}

// NewOrganizationCreateDataAttributesWithDefaults instantiates a new OrganizationCreateDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationCreateDataAttributesWithDefaults() *OrganizationCreateDataAttributes {
	this := OrganizationCreateDataAttributes{}
	return &this
}

// GetName returns the Name field value
func (o *OrganizationCreateDataAttributes) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *OrganizationCreateDataAttributes) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *OrganizationCreateDataAttributes) SetName(v string) {
	o.Name = v
}

// GetDesc returns the Desc field value
func (o *OrganizationCreateDataAttributes) GetDesc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Desc
}

// GetDescOk returns a tuple with the Desc field value
// and a boolean to check if the value has been set.
func (o *OrganizationCreateDataAttributes) GetDescOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Desc, true
}

// SetDesc sets field value
func (o *OrganizationCreateDataAttributes) SetDesc(v string) {
	o.Desc = v
}

// GetSort returns the Sort field value
func (o *OrganizationCreateDataAttributes) GetSort() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sort
}

// GetSortOk returns a tuple with the Sort field value
// and a boolean to check if the value has been set.
func (o *OrganizationCreateDataAttributes) GetSortOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sort, true
}

// SetSort sets field value
func (o *OrganizationCreateDataAttributes) SetSort(v string) {
	o.Sort = v
}

// GetCountry returns the Country field value
func (o *OrganizationCreateDataAttributes) GetCountry() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Country
}

// GetCountryOk returns a tuple with the Country field value
// and a boolean to check if the value has been set.
func (o *OrganizationCreateDataAttributes) GetCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Country, true
}

// SetCountry sets field value
func (o *OrganizationCreateDataAttributes) SetCountry(v string) {
	o.Country = v
}

// GetOwner returns the Owner field value
func (o *OrganizationCreateDataAttributes) GetOwner() OrganizationCreateDataAttributesOwner {
	if o == nil {
		var ret OrganizationCreateDataAttributesOwner
		return ret
	}

	return o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value
// and a boolean to check if the value has been set.
func (o *OrganizationCreateDataAttributes) GetOwnerOk() (*OrganizationCreateDataAttributesOwner, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Owner, true
}

// SetOwner sets field value
func (o *OrganizationCreateDataAttributes) SetOwner(v OrganizationCreateDataAttributesOwner) {
	o.Owner = v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *OrganizationCreateDataAttributes) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationCreateDataAttributes) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *OrganizationCreateDataAttributes) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *OrganizationCreateDataAttributes) SetCity(v string) {
	o.City = &v
}

func (o OrganizationCreateDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationCreateDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["desc"] = o.Desc
	toSerialize["sort"] = o.Sort
	toSerialize["country"] = o.Country
	toSerialize["owner"] = o.Owner
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	return toSerialize, nil
}

func (o *OrganizationCreateDataAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"desc",
		"sort",
		"country",
		"owner",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrganizationCreateDataAttributes := _OrganizationCreateDataAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOrganizationCreateDataAttributes)

	if err != nil {
		return err
	}

	*o = OrganizationCreateDataAttributes(varOrganizationCreateDataAttributes)

	return err
}

type NullableOrganizationCreateDataAttributes struct {
	value *OrganizationCreateDataAttributes
	isSet bool
}

func (v NullableOrganizationCreateDataAttributes) Get() *OrganizationCreateDataAttributes {
	return v.value
}

func (v *NullableOrganizationCreateDataAttributes) Set(val *OrganizationCreateDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationCreateDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationCreateDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationCreateDataAttributes(val *OrganizationCreateDataAttributes) *NullableOrganizationCreateDataAttributes {
	return &NullableOrganizationCreateDataAttributes{value: val, isSet: true}
}

func (v NullableOrganizationCreateDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationCreateDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


